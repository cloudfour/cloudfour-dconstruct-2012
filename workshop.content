% dConstruct 2012
% Lyza Gardner
% September 6, 2012

# Our Devices

* BlackBerry 8320 Curve v4.5.0.81 (native browser). Our project manager Megan's old phone. Hardware keyboard and pointer.
* BlackBerry 9670 Style v6.0.0.123 (native browser). BlackBerry flip phone.
* Nexus S Android 4.1.1 Firefox 14.0.2. Smart Phone w/touchscreen.
* Nexus S Android 4.1.1 native
* Motorola Backflip Android 1.5 (Motorola Blur Build)
* iPhone 4 iOS 5.1.1 native Safari browser
* iPhone 4 iOS 5.1.1 Opera Mini
* Nokia N8 Windows Phone native browser (version?)
* [Opera Mini simulator](http://www.opera.com/developer/tools/mini/)
* Kindle Fire tablet v6.3 native browser 

-------------------------------------------------------------------------------

# Part 1. Starting from scratch

-------------------------------------------------------------------------------

## Starting with nothing

> "Be not afeard; the isle is full of noises." —*The Tempest*, Act III, Scene 2, Wm. Shakespeare

-------------------------------------------------------------------------------

## So many options

When we start from scratch, we have so many choices to make.

* Web site
* Native application
* Web site that works on mobile devices
* Web site that works "everywhere"
* Web site that works on selected devices
* Web site using development framework or tools
* Adaptation of existing web site

Mobile web development has a complicated and somewhat mysterious history.

-------------------------------------------------------------------------------

## NEED TO FLESH OUT HIGH-LEVEL SLIDES HERE 

-------------------------------------------------------------------------------

## The evolution of mobile markup and options

### WML, XHTML-MP...

* SGML
* HDML (OpenWave) -> WML
* HTML/XHTML
* cHTML (Compact HTML/iMode)
* XHTML-MP 1.1
* XHTML-MP 1.2
* XHTML-Basic

## XHTML-MP

### DOCTYPES

~~~
<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.0//EN"
"http://www.wapforum.org/DTD/xhtml-mobile10.dtd">
 
<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.1//EN"
"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile11.dtd">
 
<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN"
"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">
~~~

-------------------------------------------------------------------------------

## XHTML-MP, cont.

* Modularized XHTML
* Provided a bridge between simplified (WML) mobile markup and more full-featured support
* DOCTYPE triggers (some) mobile browsers to use different layout modes
* Was commonly used

### Not supported

* `<iframe>`
* `target` attribute in links
* Certain `<table>` tags (`<tbody>`, etc.)
* Plugins

#### Handout

##### References

* Gail Rahn-Frederick and Rajesh Lal's [*Beginning Smartphone Web Development*][rahn-frederick] is a few years old now but has an in-depth look at the history, evolution and specifics of mobile markup and DOCTYPEs.
* [Jason and my book][hfmw] covers some of this in chapter 3.
* Lynda.com ["History of Mobile Markup Languages" on YouTube][history-markup] is a great little summary. I think it *might* swap XHTML-MP and XHTML-Basic in the timeline, but, really, these things are pretty complex.

-------------------------------------------------------------------------------

## HTML5 is the way forward

* HTML5 by and large is tolerated by phones, even really old ones.
* No studies I know of using non-MP XHTML-variant doctypes.

#### Good enough for jazz: HTML5 is usually OK

#### Beware: Informal HTML5 might cause choking

#### Hold that thought: Issues with HTML5 support

-------------------------------------------------------------------------------

## There's more than one way to...

* Targeting older or feature phones?
* Which is more important: bulletproof support in your market or the ability to do more powerful stuff?

#### Theme: Choice

-------------------------------------------------------------------------------

## Options in markup and semantics

### Adaptive Content

* Future of content on the Web is complex
* Adaptability is key
* CMSes are the evil

#### Handout

##### References

* [Karen McGrane][mcgrane] is a leader in adaptive content and adaptive mobile content.

#### Theme: Content

-------------------------------------------------------------------------------

## One Approach

HTML as result of translation by "robots." Classes and IDs are attached to content and are auto-generated. Limited use of classes and IDs.

~~~{.html}
<section class="level2" id="we-make-the-web-mobile.">
<h2>We make the Web <em>mobile</em>.</h2>
</section>
<section class="level2" id="what-we-do">
<h2>What we do</h2>
<section class="level3" id="mobile-development">
<h3><a href="services/mobile-development.html" title="Our Mobile Development Process">Mobile Development</a></h3>
<p>Cloud Four designs and builds mobile-optimized websites and hybrid mobile applications using web technology.</p>
<p><a href="services/mobile-development.html" title="Our Mobile Development Process">Building the Mobile Web</a></p>
</section>
~~~

#### Handout

##### References

* I gave a talk about the kind of adaptive content driving this approach at [Mobilism 2012][mobilism]. See my deck [Cutting Through the Crap: The Essence of Content on the Future Web][cut-crap]

-------------------------------------------------------------------------------

## Another Approach

~~~{.html}
<section class="scene">

  <header>
    <h4 class="stage-direction">
      Enter <strong>Caliban</strong>, <strong>Stephano</strong>, and <strong>Trinculo</strong>
    </h4>
  </header>

  <dl>
    <dt>Stephano</dt>
    <dd>
      <em class="stage-direction">(To <strong>Trinculo</strong>)</em>
      <span class="prose line">Tell not me; when the butt is out, we</span>
      <span class="prose line">will drink water; not a drop before: therefore bear up, and</span>
      <span class="prose line">board 'em. Servant-monster, drink to me.</span>
    </dd>
~~~

#### Theme: Philosophy

-------------------------------------------------------------------------------

## All this boils down to CONTENT

* Content-first design and process
* Stripping away crap
* This is a philosophical shift, even if it seems like "duh"
* We're going to start simple to ease into our work here

> "Simplify before you suppress." —Ethan Marcotte

#### Hold that thought: Mobile-first design

#### Theme: Content

#### Handout

##### References

* A nice post from [Jeremy Keith][adactio] from last year about [content first][adactio-content-first]
* Coverage from [Luke Wroblewski][lukew] of Jeffrey Zeldman's ["Content First"][lukew-aea-content-first] presentation at [An Event Apart October 2011][aea-oct-12].
* Stephen Hay's talk [Structured Content First][stephenhay-structured-content] is another perspective.

-------------------------------------------------------------------------------

## Exercise

Exploring the feel of unstyled, basic HTML5 content in different devices and browsers. Urge folks to load page on their own phones. Those without devices could hit the opera simulator.

* http://www.opera.com/developer/tools/mini/

Note title differences.
Things fit on screen

-------------------------------------------------------------------------------

## Workflow: getting into the browser

* Mobile web development demands the revisiting of design and development processes
* Get into the browser early and often

#### Theme: Process Evolution

#### Hold that Thought: More to come on process

-------------------------------------------------------------------------------

## Basic support is good

#### Good enough for jazz: Basic support is good but not infallible

#### Beware: These CSS gotchas in older devices

## Viewports!

* Tag syntax
* Visible viewport
* Layout viewport
* PPK's article(s)
* Demo

## Baseline CSS

## CSS Organization

* Reference to Snook, SMACSS
* Options
* Touch on pre-compilers?
* Hold that thought: precompilers

## Pro Tips

* Don't chase down every form factor
* Don't assume or assert more control than you have or is necessary
* Don't start from the top
* Don't ignore mobile issues
* Don't ignore the import of serious talent in HTML, CSS and JavaScript




--------------------------------------------------------------------------

# The One Web: Responsive and Shared

## Ideas

* RWD
* Fluid formula
* Fluid layouts
* Flexible images/media
* Media Queries
* Media Query Management

* Performance
* `<img>` tag conundrum
* `<img>` Revisit
* Advanced CSS
* Flexbox
* The New Design Workflow

## The One Web

## Web Approach Philosophy

You're here, so you've at least partially voted for the web.

## Exercises

Converting something fixed-width to fluid. Implementing em-based media queries per personal discretion.

---------------------------------------------------------------------


# The Differentiated Web

## Ideas

* Feature vs. device detection
* Progressive Enhancement
* Re-visit CSS; more advanced techniques
* Columns
* Animations, transitions
* Typography
* Polyfills
---
* Rolling your own
* The binary fallacy
* Behavioral vs. presentational
* Different experiences for different device classes
* UA sniffing
* DDRs

## Exercises

* Feature-testing and enhancing a layout


------------------------------------------------------
# Behaviors and APIs

## Ideas

* Geolocation
* Cross-platform consistencies
* Different types of APIs
* AppCache primer
* LocalStorage primer
* W3C
* WhatWG
* Standards in general
* Rough support charts
* JS vs. HTML APIs

## Exercises

Write geolocation script/page integration and test on device.

# Tools and Frameworks

## Ideas

* Development frameworks
* CSS frameworks
* Foundation
* Bootstrap
* beware of "responsive"
* libraries
* tools
* jQM
* Phonegap
* Modernizr redux
* Throwing libraries at the problem
* Sencha

## Exercises

Exercise idea: Style same page w/different frameworks

# Testing and Workflows

## Ideas

* Untesting
* remote debug
* Shadow
* weinre
* shim
* Dragonfly
* jDrop
* Bookmarklets
* Emulators
* Automated testing
* Devices

## Exercises

TBD

# Master Resources

[adactio]: http://adactio.com/journal
[adactio-content-first]: http://adactio.com/journal/4523/
[aea-oct-12]: http://aneventapart.com/2011/dc/
[cssweekly]: http://css-weekly.com
[cut-crap]: https://speakerdeck.com/u/lyzadanger/p/cutting-through-the-crap-the-essence-of-content-on-the-future-web
[hfmw]: http://bit.ly/hf-mw
[history-markup]: http://www.youtube.com/watch?v=egKQhGLomcQ
[lukew]: http://www.lukew.com/
[lukew-aea-content-first]: http://www.lukew.com/ff/entry.asp?1430
[mcgrane]: http://karenmcgrane.com/
[mobilism]: http://mobilism.nl
[opera-mini-simulator]: http://www.opera.com/developer/tools/mini/
[rahn-frederick]: http://www.amazon.com/Beginning-Smartphone-Web-Development-Applications/dp/143022620X
[stephenhay-structured-content]: http://www.slideshare.net/stephenhay/structured-content-first
